{"version":3,"file":"index.454d78da86378a21eec7.hot-update.js","mappings":"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","sources":["webpack://gutenbuild/./src/components/clickable-list/index.js","webpack://gutenbuild/./src/utils/misc.js","webpack://gutenbuild/webpack/runtime/getFullHash"],"sourcesContent":["/**\n * External dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { Button, Icon } from '@wordpress/components';\nimport { copy, check } from '@wordpress/icons';\n\nimport { trunc } from '../../utils/misc';\n\nimport './style.scss';\n\n/**\n * Uses a hidden textarea that is added and removed from the DOM in order to copy to clipboard via the Browser.\n *\n * @param {string} stringToCopy A string that will be copied to the clipboard\n * @return {boolean} Whether the copy function succeeded\n */\nexport const copyToClipboard = ( stringToCopy ) => {\n\tconst element = document.createElement( 'textarea' );\n\n\t// We don't want the text area to be selected since it's temporary.\n\telement.setAttribute( 'readonly', '' );\n\n\t// We don't want screen readers to read the content since it's pattern markup\n\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t// We don't want the text area to be visible since it's temporary.\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\n\telement.value = stringToCopy;\n\n\tdocument.body.appendChild( element );\n\telement.select();\n\n\tconst success = document.execCommand( 'copy' );\n\tdocument.body.removeChild( element );\n\n\treturn success;\n};\n\nconst formatText = ( type, text ) => {\n\tlet truncated = trunc( text, 30 );\n\tswitch ( type ) {\n\t\tcase 'component':\n\t\t\treturn `<${ truncated } />`;\n\t\tcase 'object':\n\t\t\treturn `{ ${ truncated } }`;\n\t\tdefault:\n\t\t\treturn truncated;\n\t}\n};\n\nconst ClickableItem = ( { item } ) => {\n\tconst [ copied, setCopied ] = useState( false );\n\tconst split = item.text.split( '.' );\n\tconst text = split.pop();\n\n\t// useEffect( () => {\n\t// \tif ( ! copied ) {\n\t// \t\treturn;\n\t// \t}\n\n\t// \tconst timer = setTimeout( () => setCopied( false ), 5000 );\n\t// \treturn () => {\n\t// \t\tclearTimeout( timer );\n\t// \t};\n\t// }, [ copied ] );\n\n\treturn (\n\t\t<li>\n\t\t\t<a href={ item.link } target=\"_blank\" title={ item.text }>\n\t\t\t\t<div className=\"gutenbuild-clickable-list__title\">\n\t\t\t\t\t{ formatText( item.type, text ) }\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\t<span\n\t\t\t\t\t\tkey={ item.key }\n\t\t\t\t\t\tclassName=\"gutenbuild-clickable-list__subtitle\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ split.join( '.' ) }\n\t\t\t\t\t</span>\n\t\t\t\t}\n\t\t\t\t<div className=\"gutenbuild-clickable-list__tools\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tisSmall={ true }\n\t\t\t\t\t\tisPrimary={ true }\n\t\t\t\t\t\tonClick={ ( e ) => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\t\tcopyToClipboard( `wp.${ item.text }` );\n\t\t\t\t\t\t\tsetCopied( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon size={ 18 } icon={ copied ? check : copy } />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t</li>\n\t);\n};\n\nconst ClickableList = ( { items } ) => {\n\treturn (\n\t\t<ul className=\"gutenbuild-clickable-list\">\n\t\t\t{ items.map( ( i ) => (\n\t\t\t\t<ClickableItem key={ i.text } item={ i } />\n\t\t\t) ) }\n\t\t</ul>\n\t);\n};\n\nexport default ClickableList;\n","export const trunc = ( str, charMax ) => {\n\tif ( str.length > charMax ) {\n\t\treturn str.slice( 0, charMax ) + '...';\n\t} else {\n\t\treturn str;\n\t}\n};\n","__webpack_require__.h = function() { return \"252255ed281fe6215354\"; }"],"names":["useState","useEffect","Button","Icon","copy","check","trunc","copyToClipboard","stringToCopy","element","document","createElement","setAttribute","style","position","left","value","body","appendChild","select","success","execCommand","removeChild","formatText","type","text","truncated","ClickableItem","item","copied","setCopied","split","pop","link","key","join","e","stopPropagation","preventDefault","ClickableList","items","map","i","str","charMax","length","slice"],"sourceRoot":""}