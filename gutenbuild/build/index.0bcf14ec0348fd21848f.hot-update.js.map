{"version":3,"file":"index.0bcf14ec0348fd21848f.hot-update.js","mappings":"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","sources":["webpack://gutenbuild/./node_modules/@wordpress/icons/build-module/library/copy.js","webpack://gutenbuild/./src/components/clickable-list/index.js","webpack://gutenbuild/webpack/runtime/getFullHash"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst copy = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M20.2 8v11c0 .7-.6 1.2-1.2 1.2H6v1.5h13c1.5 0 2.7-1.2 2.7-2.8V8zM18 16.4V4.6c0-.9-.7-1.6-1.6-1.6H4.6C3.7 3 3 3.7 3 4.6v11.8c0 .9.7 1.6 1.6 1.6h11.8c.9 0 1.6-.7 1.6-1.6zm-13.5 0V4.6c0-.1.1-.1.1-.1h11.8c.1 0 .1.1.1.1v11.8c0 .1-.1.1-.1.1H4.6l-.1-.1z\"\n}));\nexport default copy;\n//# sourceMappingURL=copy.js.map","/**\n * External dependencies\n */\nimport { Button, ButtonGroup, Icon } from '@wordpress/components';\nimport { copy, external } from '@wordpress/icons';\n\nimport './style.scss';\n\n/**\n * Uses a hidden textarea that is added and removed from the DOM in order to copy to clipboard via the Browser.\n *\n * @param {string} stringToCopy A string that will be copied to the clipboard\n * @return {boolean} Whether the copy function succeeded\n */\nexport const copyToClipboard = ( stringToCopy ) => {\n\tconst element = document.createElement( 'textarea' );\n\n\t// We don't want the text area to be selected since it's temporary.\n\telement.setAttribute( 'readonly', '' );\n\n\t// We don't want screen readers to read the content since it's pattern markup\n\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t// We don't want the text area to be visible since it's temporary.\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\n\telement.value = stringToCopy;\n\n\tdocument.body.appendChild( element );\n\telement.select();\n\n\tconst success = document.execCommand( 'copy' );\n\tdocument.body.removeChild( element );\n\n\treturn success;\n};\n\nconst ClickableList = ( { items, onClick } ) => {\n\tconst formatText = ( type, text ) => {\n\t\tswitch ( type ) {\n\t\t\tcase 'component':\n\t\t\t\treturn `<${ text } />`;\n\t\t\tcase 'object':\n\t\t\t\treturn `{${ text }}`;\n\t\t\tdefault:\n\t\t\t\treturn `${ text }()`;\n\t\t}\n\t};\n\n\treturn (\n\t\t<ul className=\"gutenbuild-clickable-list\">\n\t\t\t{ items.map( ( i ) => {\n\t\t\t\tconst split = i.text.split( '.' );\n\t\t\t\tconst text = split.pop();\n\n\t\t\t\treturn (\n\t\t\t\t\t<li key={ i.text }>\n\t\t\t\t\t\t<a href=\"#\" onClick={ () => onClick( i ) }>\n\t\t\t\t\t\t\t<div className=\"gutenbuild-clickable-list__title\">\n\t\t\t\t\t\t\t\t{ formatText( i.type, text ) }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tkey={ i }\n\t\t\t\t\t\t\t\t\tclassName=\"gutenbuild-clickable-list__subtitle\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ split.join( '.' ) }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<div className=\"gutenbuild-clickable-list__tools\">\n\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisSmall={ true }\n\t\t\t\t\t\t\t\t\t\tisPrimary={ true }\n\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\tcopyToClipboard( i.text );\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Icon size={ 18 } icon={ copy } />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tisSmall={ true }\n\t\t\t\t\t\t\t\t\t\tisPrimary={ true }\n\t\t\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\t\t\twindow.open( i.link );\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Icon size={ 18 } icon={ external } />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t</ul>\n\t);\n};\n\nexport default ClickableList;\n","__webpack_require__.h = function() { return \"102b4f55b6d764925f45\"; }"],"names":["Button","ButtonGroup","Icon","copy","external","copyToClipboard","stringToCopy","element","document","createElement","setAttribute","style","position","left","value","body","appendChild","select","success","execCommand","removeChild","ClickableList","items","onClick","formatText","type","text","map","i","split","pop","join","window","open","link"],"sourceRoot":""}